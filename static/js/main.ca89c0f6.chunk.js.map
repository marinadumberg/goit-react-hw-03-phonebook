{"version":3,"sources":["components/Section/Section.module.css","components/Filter/Filter.module.css","components/Section/Section.js","components/Form/Form.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","App.js","index.js","components/Form/Form.module.css","components/ContactsList/ContactsList.module.css"],"names":["module","exports","Section","title","children","className","s","section","Form","state","name","number","nameInputId","shortid","generate","numInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","formInput","placeholder","id","type","pattern","required","onChange","formBtn","Component","ContactsList","contacts","onDeleteContact","contactList","map","contactItem","deleteBtn","onClick","Filter","label","filterInput","App","filter","isInList","contact","find","cont","toLocaleLowerCase","includes","addContact","console","log","unId","alert","deleteContact","contactId","prevState","changeFilter","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","normalizeContacts","visibleContacts","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.ca89c0f6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\",\"title\":\"Section_title__2S6oE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__u16Kg\"};","import PropTypes from \"prop-types\";\nimport s from \"./Section.module.css\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n};\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import React, { Component } from \"react\";\nimport shortid from \"shortid\";\nimport s from \"./Form.module.css\";\n\nexport default class Form extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n  nameInputId = shortid.generate();\n  numInputId = shortid.generate();\n\n  handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n  reset = () => {\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor={this.nameInputId}>\n            <input\n              className={s.formInput}\n              placeholder=\"Name\"\n              id={this.nameInputId}\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label htmlFor={this.numInputId}>\n            <input\n              className={s.formInput}\n              placeholder=\"Tel\"\n              id={this.numInputId}\n              type=\"tel\"\n              name=\"number\"\n              value={this.state.number}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              onChange={this.handleChange}\n            />\n          </label>\n          <button className={s.formBtn} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactsList.module.css\";\n\nconst ContactsList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul className={s.contactList}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.contactItem}>\n          <p>\n            {name},{number}\n          </p>\n          <button\n            className={s.deleteBtn}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactsList;\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChange }) => (\n  <label className={s.label}>\n    <input\n      className={s.filterInput}\n      placeholder=\"Find contacts\"\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n    />\n  </label>\n);\n\nexport default Filter;\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\nimport Section from \"./components/Section/Section\";\nimport Form from \"./components/Form/Form\";\nimport ContactsList from \"./components/ContactsList/ContactsList\";\nimport Filter from \"./components/Filter/Filter\";\nimport { v4 as unId } from \"uuid\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  isInList = (contact, contacts) =>\n    contacts.find((cont) =>\n      cont.name.toLocaleLowerCase().includes(contact.name.toLocaleLowerCase())\n    );\n  addContact = (e) => {\n    const { contacts } = this.state;\n    console.log({ contacts });\n    const contact = {\n      id: unId(),\n      name: e.name,\n      number: e.number,\n    };\n\n    this.isInList(contact, contacts)\n      ? alert(`${contact.name} is already in your list`)\n      : this.setState(({ contacts }) => ({\n          contacts: [contact, ...contacts],\n        }));\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((cont) => cont.id !== contactId),\n    }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n  componentDidMount() {\n    // console.log('didmount');\n    const contacts = localStorage.getItem(\"contacts\");\n    // console.log(contacts);\n    const parsedContacts = JSON.parse(contacts);\n    // console.log(parsedContacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const normalizeContacts = this.state.filter.toLocaleLowerCase();\n    const visibleContacts = this.state.contacts.filter((contact) =>\n      contact.name.toLocaleLowerCase().includes(normalizeContacts)\n    );\n    const { filter } = this.state;\n    return (\n      <div>\n        <Section title=\"Phonebook\">\n          <Form onSubmit={this.addContact} />\n        </Section>\n        <Section title=\"Contacts\">\n          <Filter value={filter} onChange={this.changeFilter} />\n          <ContactsList\n            contacts={visibleContacts}\n            onDeleteContact={this.deleteContact}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formInput\":\"Form_formInput__7h6Ga\",\"formBtn\":\"Form_formBtn__6_XDB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactsList_contactList__-3u15\",\"contactItem\":\"ContactsList_contactItem__tVLDq\",\"deleteBtn\":\"ContactsList_deleteBtn__9HgYF\",\"icon\":\"ContactsList_icon__1TDhV\"};"],"sourceRoot":""}